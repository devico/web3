/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { Donation, DonationInterface } from "../../contracts/Donation";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "EtherSendError",
    type: "error",
  },
  {
    inputs: [],
    name: "InsufficientFunds",
    type: "error",
  },
  {
    inputs: [],
    name: "OnlyOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "ZeroEther",
    type: "error",
  },
  {
    inputs: [],
    name: "donate",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "donations",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "donators",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getDonators",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getSumOfDonations",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "sendHelp",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610a41806100606000396000f3fe6080604052600436106100745760003560e01c8063bf1482fa1161004e578063bf1482fa14610153578063cc6cb19a1461017e578063ed88c68e146101bb578063f3a01489146101c5576100bd565b80636f965a63146100c25780638da5cb5b146100eb578063ac62f56614610116576100bd565b366100bd57600034036100b3576040517f25b656fc00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6100bb6101f0565b005b600080fd5b3480156100ce57600080fd5b506100e960048036038101906100e4919061071d565b610357565b005b3480156100f757600080fd5b506101006104be565b60405161010d919061076c565b60405180910390f35b34801561012257600080fd5b5061013d60048036038101906101389190610787565b6104e2565b60405161014a919061076c565b60405180910390f35b34801561015f57600080fd5b50610168610521565b6040516101759190610872565b60405180910390f35b34801561018a57600080fd5b506101a560048036038101906101a09190610894565b6105af565b6040516101b291906108d0565b60405180910390f35b6101c36101f0565b005b3480156101d157600080fd5b506101da6105c7565b6040516101e791906108d0565b60405180910390f35b60006001905060005b600180549050811015610293573373ffffffffffffffffffffffffffffffffffffffff1660018281548110610231576102306108eb565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16036102805760009150610293565b808061028b90610949565b9150506101f9565b5080156102fe576001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b34600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461034d9190610991565b9250508190555050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146103dc576040517f5fc483c500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80471015610416576040517f356680b700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008273ffffffffffffffffffffffffffffffffffffffff168260405161043c906109f6565b60006040518083038185875af1925050503d8060008114610479576040519150601f19603f3d011682016040523d82523d6000602084013e61047e565b606091505b50509050806104b9576040517f3b6ce6ce00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b505050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600181815481106104f257600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b606060018054806020026020016040519081016040528092919081815260200182805480156105a557602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001906001019080831161055b575b5050505050905090565b60026020528060005260406000206000915090505481565b6000806000905060005b60018054905081101561067c5760026000600183815481106105f6576105f56108eb565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054826106679190610991565b9150808061067490610949565b9150506105d1565b508091505090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006106b482610689565b9050919050565b6106c4816106a9565b81146106cf57600080fd5b50565b6000813590506106e1816106bb565b92915050565b6000819050919050565b6106fa816106e7565b811461070557600080fd5b50565b600081359050610717816106f1565b92915050565b6000806040838503121561073457610733610684565b5b6000610742858286016106d2565b925050602061075385828601610708565b9150509250929050565b610766816106a9565b82525050565b6000602082019050610781600083018461075d565b92915050565b60006020828403121561079d5761079c610684565b5b60006107ab84828501610708565b91505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6107e9816106a9565b82525050565b60006107fb83836107e0565b60208301905092915050565b6000602082019050919050565b600061081f826107b4565b61082981856107bf565b9350610834836107d0565b8060005b8381101561086557815161084c88826107ef565b975061085783610807565b925050600181019050610838565b5085935050505092915050565b6000602082019050818103600083015261088c8184610814565b905092915050565b6000602082840312156108aa576108a9610684565b5b60006108b8848285016106d2565b91505092915050565b6108ca816106e7565b82525050565b60006020820190506108e560008301846108c1565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610954826106e7565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036109865761098561091a565b5b600182019050919050565b600061099c826106e7565b91506109a7836106e7565b92508282019050808211156109bf576109be61091a565b5b92915050565b600081905092915050565b50565b60006109e06000836109c5565b91506109eb826109d0565b600082019050919050565b6000610a01826109d3565b915081905091905056fea2646970667358221220c08a9a60ca246b7f0de84930775b5dbb1be3e7fe949de5549b530a7fac1f991c64736f6c63430008120033";

type DonationConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DonationConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Donation__factory extends ContractFactory {
  constructor(...args: DonationConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Donation> {
    return super.deploy(overrides || {}) as Promise<Donation>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Donation {
    return super.attach(address) as Donation;
  }
  override connect(signer: Signer): Donation__factory {
    return super.connect(signer) as Donation__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DonationInterface {
    return new utils.Interface(_abi) as DonationInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Donation {
    return new Contract(address, _abi, signerOrProvider) as Donation;
  }
}
