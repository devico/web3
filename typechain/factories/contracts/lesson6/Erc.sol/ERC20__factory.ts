/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  ERC20,
  ERC20Interface,
} from "../../../../contracts/lesson6/Erc.sol/ERC20";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "initialSupply",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "InsufficientFunds",
    type: "error",
  },
  {
    inputs: [],
    name: "InsufficientFundsAllowance",
    type: "error",
  },
  {
    inputs: [],
    name: "ZeroAddress",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620029f7380380620029f7833981810160405281019062000037919062000533565b620000576200004b620000c460201b60201c565b620000cc60201b60201c565b620000736764bb1abf8852472360c01b6200019060201b60201c565b6200008f676a3a438a755ec7ed60c01b6200019060201b60201c565b620000ab6789a62d6b3d64c24760c01b6200019060201b60201c565b620000bd33826200019360201b60201c565b5062000680565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b50565b620001af67b71773f75a46e38860c01b6200019060201b60201c565b620001bf6200043960201b60201c565b620001db67dfe4f33e1dc3d11860c01b6200019060201b60201c565b620001f7675c70c7b30c529da660c01b6200019060201b60201c565b6200021367ddf15417df33905460c01b6200019060201b60201c565b6200022f67c638d703aa7fa44360c01b6200019060201b60201c565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603620002ce5762000280673798871a8bd1311960c01b6200019060201b60201c565b6200029c6712682b5ae83deaf360c01b6200019060201b60201c565b6040517fd92e233d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b620002ea67ae2c0118205fad2c60c01b6200019060201b60201c565b6200030667ca4de1bfc0c7d91460c01b6200019060201b60201c565b80600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825462000357919062000594565b925050819055506200037a67c6cd487035a89f1860c01b6200019060201b60201c565b80600160008282546200038e919062000594565b92505081905550620003b16761b41a5cf47b17f160c01b6200019060201b60201c565b620003cd678a64541216808a0060c01b6200019060201b60201c565b8173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516200042d9190620005e0565b60405180910390a35050565b62000449620000c460201b60201c565b73ffffffffffffffffffffffffffffffffffffffff166200046f620004ca60201b60201c565b73ffffffffffffffffffffffffffffffffffffffff1614620004c8576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620004bf906200065e565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600080fd5b6000819050919050565b6200050d81620004f8565b81146200051957600080fd5b50565b6000815190506200052d8162000502565b92915050565b6000602082840312156200054c576200054b620004f3565b5b60006200055c848285016200051c565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000620005a182620004f8565b9150620005ae83620004f8565b9250828201905080821115620005c957620005c862000565565b5b92915050565b620005da81620004f8565b82525050565b6000602082019050620005f76000830184620005cf565b92915050565b600082825260208201905092915050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b600062000646602083620005fd565b915062000653826200060e565b602082019050919050565b60006020820190508181036000830152620006798162000637565b9050919050565b61236780620006906000396000f3fe608060405234801561001057600080fd5b50600436106101005760003560e01c8063715018a611610097578063a457c2d711610066578063a457c2d714610289578063a9059cbb146102a5578063dd62ed3e146102d5578063f2fde38b1461030557610100565b8063715018a6146102275780638da5cb5b1461023157806395d89b411461024f5780639dc29fac1461026d57610100565b8063313ce567116100d3578063313ce567146101a157806339509351146101bf57806340c10f19146101db57806370a08231146101f757610100565b806306fdde0314610105578063095ea7b31461012357806318160ddd1461015357806323b872dd14610171575b600080fd5b61010d610321565b60405161011a9190611eb4565b60405180910390f35b61013d60048036038101906101389190611f6f565b61039a565b60405161014a9190611fca565b60405180910390f35b61015b6105ce565b6040516101689190611ff4565b60405180910390f35b61018b6004803603810190610186919061200f565b610614565b6040516101989190611fca565b60405180910390f35b6101a9610b38565b6040516101b6919061207e565b60405180910390f35b6101d960048036038101906101d49190611f6f565b610b7d565b005b6101f560048036038101906101f09190611f6f565b610e0f565b005b610211600480360381019061020c9190612099565b611046565b60405161021e9190611ff4565b60405180910390f35b61022f6110cb565b005b6102396110df565b60405161024691906120d5565b60405180910390f35b610257611108565b6040516102649190611eb4565b60405180910390f35b61028760048036038101906102829190611f6f565b611181565b005b6102a3600480360381019061029e9190611f6f565b611495565b005b6102bf60048036038101906102ba9190611f6f565b611841565b6040516102cc9190611fca565b60405180910390f35b6102ef60048036038101906102ea91906120f0565b611b91565b6040516102fc9190611ff4565b60405180910390f35b61031f600480360381019061031a9190612099565b611c54565b005b606061033767692633b159118f5360c01b611cd7565b61034b6733f63c9e65eea6a260c01b611cd7565b61035f674242cdb85833414960c01b611cd7565b6040518060400160405280600881526020017f44736e546f6b656e000000000000000000000000000000000000000000000000815250905090565b60006103b06792fdc9b1962d178f60c01b611cd7565b6103c467881ed339805da7fd60c01b611cd7565b6103d8670e4e294d5fdb939960c01b611cd7565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610466576104206718d3bc5d8e27bbb060c01b611cd7565b61043467e2e4fd1ba1f989be60c01b611cd7565b6040517fd92e233d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61047a67e46fa6966fb386e560c01b611cd7565b61048e671e41902858f189a360c01b611cd7565b81600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610523670e1c00b17267247360c01b611cd7565b610537674f3de9b439178e4c60c01b611cd7565b8273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516105949190611ff4565b60405180910390a36105b067548d5d0d6149025160c01b611cd7565b6105c4673fe8008bd9d6350e60c01b611cd7565b6001905092915050565b60006105e467b09c4d036a8ef9c060c01b611cd7565b6105f8679a59b6b795d1c39260c01b611cd7565b61060c67bd949dc5213cc97860c01b611cd7565b600154905090565b600061062a6728f733cc2157f0d160c01b611cd7565b838261064067f06321931aab6ba160c01b611cd7565b61065467d12d1f93f3618ab260c01b611cd7565b610668675f321511821942aa60c01b611cd7565b61067c674f4bc39ffbdfc17760c01b611cd7565b8061068683611046565b10156106c7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106be9061217c565b60405180910390fd5b6106db67a0dd9316567cb87860c01b611cd7565b6106ef6794370f4623108c7660c01b611cd7565b61070367b651aabae93bcdb160c01b611cd7565b61071767c9640fd20c38ec9a60c01b611cd7565b61072b6758b32593603c8c5860c01b611cd7565b61073f67a00fb85f276517c660c01b611cd7565b600073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff16036107cd5761078767b19cfb6611f9560560c01b611cd7565b61079b6744042596cd7152cc60c01b611cd7565b6040517fd92e233d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6107e16799681929c5fab34460c01b611cd7565b6107f56772839fcba12b256960c01b611cd7565b6108096722a1666c6a799fec60c01b611cd7565b83600360008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205410156108e7576108a1671d62c436010ff99460c01b611cd7565b6108b5674c8d6900680ae73060c01b611cd7565b6040517f3e334be700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6108fb67059cc3b89fe17ada60c01b611cd7565b61090f67675e5eedfbfef2be60c01b611cd7565b83600360008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461099b91906121cb565b925050819055506109b6670a5f5528f9c0864a60c01b611cd7565b83600260008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610a0591906121cb565b92505081905550610a2067c9f10d42822ad96560c01b611cd7565b83600260008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610a6f91906121ff565b92505081905550610a8a6771d99319fc1e635b60c01b611cd7565b610a9e673982fb1c6838ddac60c01b611cd7565b8473ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef86604051610afb9190611ff4565b60405180910390a3610b17677f0e9f8bc33f08e560c01b611cd7565b610b2b6746d24c316436aa1660c01b611cd7565b6001925050509392505050565b6000610b4e6780d4ab72da5141f460c01b611cd7565b610b62673fb1ecad601b535c60c01b611cd7565b610b76678c6449f0ad53271a60c01b611cd7565b6012905090565b610b9167eb5032669375680460c01b611cd7565b610ba56756089911c001cbbd60c01b611cd7565b610bb9679e72f969b007897b60c01b611cd7565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610c4757610c01678101a6ea89de589160c01b611cd7565b610c15672105a19b5dd3973060c01b611cd7565b6040517fd92e233d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610c5b67241584627793348160c01b611cd7565b610c6f67f72974433a8c536260c01b611cd7565b80600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610cfb91906121ff565b92505081905550610d16674877a2bf67a6c81f60c01b611cd7565b610d2a670b0baab8eed0953c60c01b611cd7565b8173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054604051610e039190611ff4565b60405180910390a35050565b610e2367b71773f75a46e38860c01b611cd7565b610e2b611cda565b610e3f67dfe4f33e1dc3d11860c01b611cd7565b610e53675c70c7b30c529da660c01b611cd7565b610e6767ddf15417df33905460c01b611cd7565b610e7b67c638d703aa7fa44360c01b611cd7565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610f0957610ec3673798871a8bd1311960c01b611cd7565b610ed76712682b5ae83deaf360c01b611cd7565b6040517fd92e233d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610f1d67ae2c0118205fad2c60c01b611cd7565b610f3167ca4de1bfc0c7d91460c01b611cd7565b80600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610f8091906121ff565b92505081905550610f9b67c6cd487035a89f1860c01b611cd7565b8060016000828254610fad91906121ff565b92505081905550610fc86761b41a5cf47b17f160c01b611cd7565b610fdc678a64541216808a0060c01b611cd7565b8173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161103a9190611ff4565b60405180910390a35050565b600061105c67c6f19c7cf443feaf60c01b611cd7565b611070672ef95e37dcb3518b60c01b611cd7565b61108467f4eadd1a70da639b60c01b611cd7565b600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6110d3611cda565b6110dd6000611d58565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b606061111e6725bbfd8dd33e3b0860c01b611cd7565b611132677ce1be4b5e636db860c01b611cd7565b61114667b4856e509dda2abd60c01b611cd7565b6040518060400160405280600381526020017f44534e0000000000000000000000000000000000000000000000000000000000815250905090565b61119567a3221dd5ae0c48a660c01b611cd7565b61119d611cda565b6111b1670fa154bbe9fed50160c01b611cd7565b6111c567e1433ff8e9a6085f60c01b611cd7565b6111d9673e552334efa8721360c01b611cd7565b6111ed679dd03a2c2075a8c960c01b611cd7565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361127b5761123567217f6885ba46559360c01b611cd7565b6112496784b7a8ba1cbc75e960c01b611cd7565b6040517fd92e233d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61128f672caad5489312df9e60c01b611cd7565b6112a36798065694a46f510560c01b611cd7565b6112b767e05aa7cd2fd13f6b60c01b611cd7565b80600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054101561135857611312675df78fcf06bfcb4660c01b611cd7565b61132667a63e63596cf7c87360c01b611cd7565b6040517f356680b700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61136c677f27f405dd99e82060c01b611cd7565b61138067a5aa20924c25253e60c01b611cd7565b80600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546113cf91906121cb565b925050819055506113ea67493fecfaec0ce56e60c01b611cd7565b80600160008282546113fc91906121cb565b92505081905550611417679f45f1e00c68a5cf60c01b611cd7565b61142b67d2b8d7b54ea8debe60c01b611cd7565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516114899190611ff4565b60405180910390a35050565b6114a96708de1660bc13c1c160c01b611cd7565b6114bd67ff8023b4f1b67fbb60c01b611cd7565b6114d167c0a56f594737784160c01b611cd7565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361155f5761151967feb0069dd55e45b960c01b611cd7565b61152d673190f9d69ba9a51360c01b611cd7565b6040517fd92e233d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61157367e690bc2c7d7d11b960c01b611cd7565b61158767ae276be30778a03460c01b611cd7565b61159b673a7f73c824c282b560c01b611cd7565b80600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054101561167957611633676de011488a3f160f60c01b611cd7565b6116476795a7ac6d244a536560c01b611cd7565b6040517f3e334be700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61168d6747d552352df955fd60c01b611cd7565b6116a167d81a4fc93348b83060c01b611cd7565b80600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461172d91906121cb565b9250508190555061174867dc6940d1450787fb60c01b611cd7565b61175c67203c129411b6d44260c01b611cd7565b8173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546040516118359190611ff4565b60405180910390a35050565b6000611857675303bf46d3ff776e60c01b611cd7565b61186b67ac39c6fe60979c8360c01b611cd7565b61187f677067edfd16e7ef7260c01b611cd7565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361190d576118c7675bd9cb09548ed22260c01b611cd7565b6118db67adbd6014de497f7c60c01b611cd7565b6040517fd92e233d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b611921672006420d6b32896560c01b611cd7565b61193567d3bef62bedcf8a8d60c01b611cd7565b61194967c2c8d024d738009a60c01b611cd7565b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548211156119ea576119a4676ebbf9bcc89e3dcd60c01b611cd7565b6119b86764dbdc70574bf70660c01b611cd7565b6040517f356680b700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6119fe6772bc66c1ff0fd85160c01b611cd7565b611a12679120554c9fe9f58960c01b611cd7565b81600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254611a6191906121cb565b92505081905550611a7c6778b12b78b1989dea60c01b611cd7565b81600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254611acb91906121ff565b92505081905550611ae6676310b660cf4e441b60c01b611cd7565b611afa67b6ceb47d98e4dba760c01b611cd7565b8273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051611b579190611ff4565b60405180910390a3611b736772e2c2e43ef3e13460c01b611cd7565b611b876770550805fb49f8a860c01b611cd7565b6001905092915050565b6000611ba767f01d43f1c3bd29d460c01b611cd7565b611bbb6738d4d269533560e760c01b611cd7565b611bcf675157f27f3112a9ec60c01b611cd7565b600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b611c5c611cda565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603611ccb576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611cc2906122a5565b60405180910390fd5b611cd481611d58565b50565b50565b611ce2611e1c565b73ffffffffffffffffffffffffffffffffffffffff16611d006110df565b73ffffffffffffffffffffffffffffffffffffffff1614611d56576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611d4d90612311565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b600081519050919050565b600082825260208201905092915050565b60005b83811015611e5e578082015181840152602081019050611e43565b60008484015250505050565b6000601f19601f8301169050919050565b6000611e8682611e24565b611e908185611e2f565b9350611ea0818560208601611e40565b611ea981611e6a565b840191505092915050565b60006020820190508181036000830152611ece8184611e7b565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611f0682611edb565b9050919050565b611f1681611efb565b8114611f2157600080fd5b50565b600081359050611f3381611f0d565b92915050565b6000819050919050565b611f4c81611f39565b8114611f5757600080fd5b50565b600081359050611f6981611f43565b92915050565b60008060408385031215611f8657611f85611ed6565b5b6000611f9485828601611f24565b9250506020611fa585828601611f5a565b9150509250929050565b60008115159050919050565b611fc481611faf565b82525050565b6000602082019050611fdf6000830184611fbb565b92915050565b611fee81611f39565b82525050565b60006020820190506120096000830184611fe5565b92915050565b60008060006060848603121561202857612027611ed6565b5b600061203686828701611f24565b935050602061204786828701611f24565b925050604061205886828701611f5a565b9150509250925092565b600060ff82169050919050565b61207881612062565b82525050565b6000602082019050612093600083018461206f565b92915050565b6000602082840312156120af576120ae611ed6565b5b60006120bd84828501611f24565b91505092915050565b6120cf81611efb565b82525050565b60006020820190506120ea60008301846120c6565b92915050565b6000806040838503121561210757612106611ed6565b5b600061211585828601611f24565b925050602061212685828601611f24565b9150509250929050565b7f4e6f7420656e6f75676820746f6b656e732e0000000000000000000000000000600082015250565b6000612166601283611e2f565b915061217182612130565b602082019050919050565b6000602082019050818103600083015261219581612159565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006121d682611f39565b91506121e183611f39565b92508282039050818111156121f9576121f861219c565b5b92915050565b600061220a82611f39565b915061221583611f39565b925082820190508082111561222d5761222c61219c565b5b92915050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b600061228f602683611e2f565b915061229a82612233565b604082019050919050565b600060208201905081810360008301526122be81612282565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b60006122fb602083611e2f565b9150612306826122c5565b602082019050919050565b6000602082019050818103600083015261232a816122ee565b905091905056fea2646970667358221220c0ba82884e5c88370ed146eddae26a8a87aa762a6e19a748e9e45fee7f0894fa64736f6c63430008140033";

type ERC20ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC20ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC20__factory extends ContractFactory {
  constructor(...args: ERC20ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    initialSupply: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ERC20> {
    return super.deploy(initialSupply, overrides || {}) as Promise<ERC20>;
  }
  override getDeployTransaction(
    initialSupply: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(initialSupply, overrides || {});
  }
  override attach(address: string): ERC20 {
    return super.attach(address) as ERC20;
  }
  override connect(signer: Signer): ERC20__factory {
    return super.connect(signer) as ERC20__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC20Interface {
    return new utils.Interface(_abi) as ERC20Interface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): ERC20 {
    return new Contract(address, _abi, signerOrProvider) as ERC20;
  }
}
